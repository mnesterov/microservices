// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Players.Infrastructure;

#nullable disable

namespace Players.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230116183824_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("playersseq")
                .IncrementsBy(10);

            modelBuilder.Entity("Players.Application.Commands.IdentifiedCommand.Request.IdentifiedCommandRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_requests");

                    b.ToTable("requests", (string)null);
                });

            modelBuilder.Entity("Players.Domain.Models.PlayerAggregate.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "playersseq");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("nbateamid");

                    b.HasKey("Id")
                        .HasName("pk_players");

                    b.HasIndex(new[] { "TeamId" }, "players_nbateamid_idx");

                    b.ToTable("players", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1963, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Jordan"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1965, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Scottie",
                            LastName = "Pippen"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1961, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dennis",
                            LastName = "Rodman"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1964, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ron",
                            LastName = "Harper"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1956, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Larry",
                            LastName = "Bird"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1957, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kevin",
                            LastName = "McHale"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1953, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Parish"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1960, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dominique",
                            LastName = "Wilkins"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1963, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Spud",
                            LastName = "Webb"
                        });
                });

            modelBuilder.Entity("Players.Infrastructure.IntegrationEvents.EventLog.IntegrationEventLog", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("eventType");

                    b.Property<int>("SendAttempts")
                        .HasColumnType("int")
                        .HasColumnName("sendAttempts");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transactionId");

                    b.HasKey("EventId")
                        .HasName("pk_eventlog");

                    b.ToTable("eventlog", (string)null);
                });

            modelBuilder.Entity("Players.Domain.Models.PlayerAggregate.Player", b =>
                {
                    b.OwnsOne("Players.Domain.Models.PlayerAggregate.SalaryInfo", "SalaryInfo", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("int");

                            b1.Property<double>("ContractAnnualSalary")
                                .HasColumnType("float")
                                .HasColumnName("salary");

                            b1.Property<int>("ContractLength")
                                .HasColumnType("int")
                                .HasColumnName("contractlength");

                            b1.HasKey("PlayerId");

                            b1.ToTable("players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");

                            b1.HasData(
                                new
                                {
                                    PlayerId = 1,
                                    ContractAnnualSalary = 30000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 2,
                                    ContractAnnualSalary = 20000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 3,
                                    ContractAnnualSalary = 10000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 4,
                                    ContractAnnualSalary = 5000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 5,
                                    ContractAnnualSalary = 25000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 6,
                                    ContractAnnualSalary = 20000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 7,
                                    ContractAnnualSalary = 10000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 8,
                                    ContractAnnualSalary = 25000000.0,
                                    ContractLength = 1
                                },
                                new
                                {
                                    PlayerId = 9,
                                    ContractAnnualSalary = 10000000.0,
                                    ContractLength = 1
                                });
                        });

                    b.Navigation("SalaryInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
