// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TeamsService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221205165541_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("cities", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Atlanta"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boston"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charlotte"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cleveland"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Detroit"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Los Angeles"
                        });
                });

            modelBuilder.Entity("Domain.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birthday");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("nbateamid");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("players", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1963, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            LastName = "Jordan",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1965, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Scottie",
                            LastName = "Pippen",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1961, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dennis",
                            LastName = "Rodman",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1964, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ron",
                            LastName = "Harper",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1956, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Larry",
                            LastName = "Bird",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1957, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kevin",
                            LastName = "McHale",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1953, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Parish",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1960, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dominique",
                            LastName = "Wilkins",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1963, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Spud",
                            LastName = "Webb",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("integer")
                        .HasColumnName("cityid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("nbateams", "public");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Hawks"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Celtics"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Hornets"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            Name = "Bulls"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            Name = "Cavaliers"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 6,
                            Name = "Pistons"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 7,
                            Name = "Clippers"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            Name = "Lakers"
                        });
                });

            modelBuilder.Entity("Domain.Models.Player", b =>
                {
                    b.HasOne("Domain.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Domain.Models.Team", b =>
                {
                    b.HasOne("Domain.Models.City", "City")
                        .WithMany("Teams")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Domain.Models.City", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Domain.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
